/*
 * This file is generated by jOOQ.
 */
package ru.sevsu.db.db.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.sevsu.db.db.Db;
import ru.sevsu.db.db.Indexes;
import ru.sevsu.db.db.Keys;
import ru.sevsu.db.db.tables.records.ExerciseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Exercise extends TableImpl<ExerciseRecord> {

    private static final long serialVersionUID = 2052192031;

    /**
     * The reference instance of <code>db.exercise</code>
     */
    public static final Exercise EXERCISE = new Exercise();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExerciseRecord> getRecordType() {
        return ExerciseRecord.class;
    }

    /**
     * The column <code>db.exercise.ex_id</code>.
     */
    public final TableField<ExerciseRecord, Integer> EX_ID = createField("ex_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db.exercise.ex_date</code>.
     */
    public final TableField<ExerciseRecord, Date> EX_DATE = createField("ex_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>db.exercise.ex_class_room</code>.
     */
    public final TableField<ExerciseRecord, Integer> EX_CLASS_ROOM = createField("ex_class_room", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db.exercise.course_num</code>.
     */
    public final TableField<ExerciseRecord, Integer> COURSE_NUM = createField("course_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db.exercise.ex_type</code>.
     */
    public final TableField<ExerciseRecord, String> EX_TYPE = createField("ex_type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>db.exercise</code> table reference
     */
    public Exercise() {
        this(DSL.name("exercise"), null);
    }

    /**
     * Create an aliased <code>db.exercise</code> table reference
     */
    public Exercise(String alias) {
        this(DSL.name(alias), EXERCISE);
    }

    /**
     * Create an aliased <code>db.exercise</code> table reference
     */
    public Exercise(Name alias) {
        this(alias, EXERCISE);
    }

    private Exercise(Name alias, Table<ExerciseRecord> aliased) {
        this(alias, aliased, null);
    }

    private Exercise(Name alias, Table<ExerciseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Exercise(Table<O> child, ForeignKey<O, ExerciseRecord> key) {
        super(child, key, EXERCISE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EXERCISE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ExerciseRecord> getPrimaryKey() {
        return Keys.EXERCISE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ExerciseRecord>> getKeys() {
        return Arrays.<UniqueKey<ExerciseRecord>>asList(Keys.EXERCISE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ExerciseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ExerciseRecord, ?>>asList(Keys.EXERCISE__FK__EXERCISE_COURSE_NUM__COURSE_COURSE_NUM);
    }

    public Course course() {
        return new Course(this, Keys.EXERCISE__FK__EXERCISE_COURSE_NUM__COURSE_COURSE_NUM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Exercise as(String alias) {
        return new Exercise(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Exercise as(Name alias) {
        return new Exercise(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Exercise rename(String name) {
        return new Exercise(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Exercise rename(Name name) {
        return new Exercise(name, null);
    }
}
